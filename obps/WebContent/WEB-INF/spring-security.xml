<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
             xmlns:p="http://www.springframework.org/schema/p" 
             xmlns:util="http://www.springframework.org/schema/util"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">
                    
    <global-method-security secured-annotations="enabled"/>
    <http auto-config="true" use-expressions="true">

        <!--<global-method-security pre-post-annotations="enabled" secured-annotations="enabled"/>-->
        <intercept-url pattern="/login.htm" access="permitAll" /> 
        <intercept-url pattern="/contactus.htm" access="permitAll" />       
        <intercept-url pattern="/home.htm" access="isAuthenticated()" />
        <intercept-url pattern="/initSignupForm.htm" access="permitAll" />   
        <intercept-url pattern="/submitSignupDetails.htm" access="permitAll" />
        <intercept-url pattern="/BilldeskResponse.htm" access="permitAll" />   	 
        
<!--         
		<intercept-url pattern="/*" access="isAuthenticated()" />
        <intercept-url pattern="/*.htm" access="isAuthenticated()" />
        <intercept-url pattern="/*/*.htm" access="isAuthenticated()" /> 
-->
		
        <!--<access-denied-handler error-page="/403.jsp"/>-->
        <session-management session-fixation-protection="migrateSession"/>
        <!--<remember-me/>-->        
		<form-login  
        	login-page="/login.htm" 
        	default-target-url="/home.htm"
        	authentication-failure-url="/loginfailed.htm"
   	        authentication-success-handler-ref="MyAuthenticationSuccessHandler"
        /> 
        <logout invalidate-session="true" logout-url="logout.htm" logout-success-url="/logout.htm"/>
        <custom-filter ref="captchaVerifierFilter" before="FORM_LOGIN_FILTER"/>
<!--       <csrf disabled="true"/> -->
		<csrf request-matcher-ref="csrfMatcher"/>
		
		<headers>
	         <cache-control />
	         <content-type-options />
	         <hsts />
	         <frame-options />
	         <xss-protection />
	         <header name="X-Content-Security-Policy" value="default-src 'self' https: 'unsafe-eval' 'unsafe-inline'; object-src 'self' https: blob:;script-src 'self' https: blob:; img-src 'self' https: data: blob:; style-src https: blob: 'unsafe-inline'; worker-src 'self' blob:; font-src 'self' https: data: blob:; child-src 'self' https: data: blob:;base-uri 'self';frame-ancestors 'self'"/>
	         <!--<header ref="headerWriter"/>-->
			 <xss-protection block="true"/>
		</headers>        
                		
		<custom-filter ref="corsHandler" after="PRE_AUTH_FILTER"/>
    </http> 
    
    <beans:bean id="corsHandler" class="obps.security.CorsFilter"/>  
    <beans:bean id="csrfMatcher" class="obps.security.CsrfSecurityRequestMatcher"/>  
    <beans:bean id="captchaVerifierFilter" class="obps.security.CaptchaVerifierFilter" p:failureUrl="/loginfailed.htm" />  
    <beans:bean id="MyAuthenticationSuccessHandler" class="obps.security.MyAuthenticationSuccessHandler" />
	<beans:bean id ="passwordEncoder" class = "org.springframework.security.crypto.password.NoOpPasswordEncoder" factory-method = "getInstance" />
	
    <authentication-manager alias="authenticationManager">
        <authentication-provider>
          <!-- <password-encoder ref="passwordEncoder"></password-encoder> -->
			<!-- <password-encoder hash="bcrypt"></password-encoder> -->
            <jdbc-user-service data-source-ref="dataSource" 
                               users-by-username-query="SELECT username, userpassword AS password, true AS enabled
														FROM nicobps.userlogins WHERE username = ?"

                               authorities-by-username-query="SELECT username, 'U' as authority
															FROM nicobps.userlogins
															WHERE username = ?"
			/>
        </authentication-provider>
    </authentication-manager>
     
</beans:beans>  